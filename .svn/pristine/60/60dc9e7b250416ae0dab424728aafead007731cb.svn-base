using net.qunqun.zhaiqunOA.Dal;
using net.qunqun.zhaiqunOA.IDal;
using net.qunqun.zhaiqunOA.Model;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Text;
using System.Threading.Tasks;
using net.qunqun.zhaiqunOA.DalFactory;

namespace net.qunqun.zhaiqunOA.Bll
{
  
  public  class UserInfoManager
    {
          IUserInfoDal  dal= DalFactorySimple.GetUserInfoDal();
        public bool Add(UserInfo model)
        {
            return dal.Add(model)>0;
        }
        public IQueryable<UserInfo> SelectByRow<Tkey>(int pageSize, int pageIndex, Expression<Func<UserInfo, bool>> where, Expression<Func<UserInfo, Tkey>> orderby, out int recordCount)
        {
            return dal.SelectByRow<Tkey>(pageSize, pageIndex, where, orderby, out recordCount);
        }
    }
}
